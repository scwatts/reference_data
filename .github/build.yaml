name: build_and_publish
on:
  push:
    branches:
      - main
      - dev

jobs:
  get_version:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Get version
        run: |
          CURRENT_VERSION=$(sed -n '/^current_version/{ s/^.\+ = //; p; }' .bumpversion.cfg)
          if [[ "${GITHUB_REF}" == 'refs/heads/main' ]]; then
            echo "::set-output name=version::${CURRENT_VERSION}"
          elif [[ "${GITHUB_REF}" == 'refs/heads/dev' ]]; then
            DEV_VERSION="${CURRENT_VERSION}"+dev$(echo "${GITHUB_SHA}" | cut -c-7)
            echo "::set-output name=version::${DEV_VERSION}"
          else
            echo "got bad gh ref: ${GITHUB_REF}" 1>&2
            exit 1
          fi
    outputs:
      version: ${{ steps.get_version.outputs.version }}

  build_and_publish_on_conda:
    runs-on: ubuntu-latest
    needs: get_version
    defaults:
      run:
        shell: bash -l {0}
    env:
      VERSION: ${{ needs.get_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.9
          mamba-version: "*"
          channels: bioconda,conda-forge,defaults
          channel-priority: true
      - name: Prepare env
        run: |
          mamba install boa anaconda-client bump2version
      - name: Set version
        run: |
          bump2version patch \
            --new-version "${VERSION}" \
            --allow-dirty \
            --no-commit
      - name: build_and_upload_conda_package
        run: |
          conda mambabuild \
            --token ${{ secrets.ANACONDA_TOKEN }} \
            conda/umccr_refdata/

  build_and_publish_on_ghcrio:
    runs-on: ubuntu-latest
    needs:
      - get_version
      - build_and_publish_on_conda
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        shell: bash -l {0}
    env:
      VERSION: ${{ needs.get_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          use: true
          install: true
          config-inline: |
            [worker.oci]
              max-parallelism = 2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ghcr.io/${{ github.repository }}:${VERSION}
